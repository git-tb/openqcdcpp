<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./test</line>
</preamble>

<pid>41777</pid>
<ppid>13404</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=full</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=valgrind_output.xml</arg>
  </vargv>
  <argv>
    <exe>./test</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.015 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 1</what>
  <stack>
    <frame>
      <ip>0x1CECD234</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>strlen</fn>
    </frame>
    <frame>
      <ip>0x1D279A77</ip>
      <obj>/home/tobiasb/OneDrive/projects/PDFcode/LHAPDF-6.5.5/build/lib/libLHAPDF.so</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt;(char const*, std::allocator&lt;char&gt; const&amp;) [clone .constprop.0]</fn>
    </frame>
    <frame>
      <ip>0x1D285099</ip>
      <obj>/home/tobiasb/OneDrive/projects/PDFcode/LHAPDF-6.5.5/build/lib/libLHAPDF.so</obj>
      <fn>initpdfsetbynamem_</fn>
    </frame>
    <frame>
      <ip>0x1D285681</ip>
      <obj>/home/tobiasb/OneDrive/projects/PDFcode/LHAPDF-6.5.5/build/lib/libLHAPDF.so</obj>
      <fn>initpdfsetbyname_</fn>
    </frame>
    <frame>
      <ip>0x120F02</ip>
      <obj>/home/tobiasb/OneDrive/projects/PDFcode/openqcd++/tests/F2perf/test</obj>
      <fn>mypdffillgrid_witharg_</fn>
      <dir>/home/tobiasb/OneDrive/projects/PDFcode/openqcdrad-2.1/mycode/lib</dir>
      <file>mygrid.F</file>
      <line>175</line>
    </frame>
    <frame>
      <ip>0x10E4EA</ip>
      <obj>/home/tobiasb/OneDrive/projects/PDFcode/openqcd++/tests/F2perf/test</obj>
      <fn>Pdf::initialize(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int)</fn>
    </frame>
    <frame>
      <ip>0x10B7E1</ip>
      <obj>/home/tobiasb/OneDrive/projects/PDFcode/openqcd++/tests/F2perf/test</obj>
      <fn>main</fn>
      <dir>/home/tobiasb/OneDrive/projects/PDFcode/openqcd++/tests/F2perf</dir>
      <file>test.cpp</file>
      <line>18</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1e1c60b4 is 0 bytes after a block of size 20 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x1CEC4828</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x120E9A</ip>
      <obj>/home/tobiasb/OneDrive/projects/PDFcode/openqcd++/tests/F2perf/test</obj>
      <fn>mypdffillgrid_witharg_</fn>
      <dir>/home/tobiasb/OneDrive/projects/PDFcode/openqcdrad-2.1/mycode/lib</dir>
      <file>mygrid.F</file>
      <line>175</line>
    </frame>
    <frame>
      <ip>0x10E4EA</ip>
      <obj>/home/tobiasb/OneDrive/projects/PDFcode/openqcd++/tests/F2perf/test</obj>
      <fn>Pdf::initialize(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int)</fn>
    </frame>
    <frame>
      <ip>0x10B7E1</ip>
      <obj>/home/tobiasb/OneDrive/projects/PDFcode/openqcd++/tests/F2perf/test</obj>
      <fn>main</fn>
      <dir>/home/tobiasb/OneDrive/projects/PDFcode/openqcd++/tests/F2perf</dir>
      <file>test.cpp</file>
      <line>18</line>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:27.394 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

